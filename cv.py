import os
import random
clear = lambda: os.system('cls')


# S - [S]wop player
# W - create [W]arior
# R - create wo[R]ker
# C - set [C]apital
# M - print [M]oney
# V - print Strength
enemy = [1]
money = 100
workers = [1]
warrior = [1]
heroes = []
move = 0
C_e = [0, 0]
C_h = []
map1 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]
map = (["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-" ],
	   ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-" ],
	   ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-" ],
	   ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-" ],
	   ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-" ],
	   ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-" ],
	   ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-" ],
	   ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-" ],
	   ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-" ],
	   ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-" ],
	   ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-" ],
	   ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-" ],
	   ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-" ],
	   ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-" ],
	   ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-" ],
	   ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-" ],
	   ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-" ],
	   ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-" ],
	   ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-" ],
	   ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-" ],
	   ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-" ],
	   ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-" ],
	   ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-" ],
	   ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-" ],
	   ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-" ],
	   ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-" ],
	   ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-" ],
	   ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-" ],
	   ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-" ],
	   ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-" ],																																	
	   ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-" ],
	   ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-" ])

def print_field():
	Print_Move(move)
	Print_Money(money, move)
	Print_Strength(warrior)
	print()
	for i in range(len(map1)):
		if map1[i] > 10:
			print(map1[i], end=" ")
		else:
			print(map1[i], end="  ")
	print()
	for i in range(len(map)):
		for j in range(len(map[i])):
			print(map[i][j], end = "  ")
		print(str(i))

def print_commands():

	print("""
			 \n
			 S - [S]wop player \n
		  	 W - create [W]arrior \n
		  	 R - create wo[R]ker \n
		 	 C - set [C]apital \n
		  	 M - print [M]oney \n
		  	 V - print Strength \n
		  						""")

def Enemy(move, workers, enemy, C_e):
	if move == 4:
		coor = [random.randint(1, 30), random.randint(1, 30)]
		C_e = coor
		map[coor[0]][coor[1]] = "E"
		map[coor[0]-1][coor[1]] = "="
		map[coor[0]+1][coor[1]] = "="
		map[coor[0]][coor[1]+1] = "|"
		map[coor[0]][coor[1]-1] = "|"
		map[coor[0]-1][coor[1]+1] = "+"
		map[coor[0]-1][coor[1]-1] = "+"
		map[coor[0]+1][coor[1]+1] = "+"
		map[coor[0]+1][coor[1]-1] = "+"

	if (move >= 5) and (move % 3 == 0):
		coor = [random.randint(1, 30), random.randint(1, 30)]
		enemy.append([int(coor[1]), int(coor[0]), 50])
		map[coor[0]][coor[1]] = "CC"
		map[coor[0]-1][coor[1]] = "="
		map[coor[0]+1][coor[1]] = "="
		map[coor[0]][coor[1]+1] = "|"
		map[coor[0]][coor[1]-1] = "|"
		map[coor[0]-1][coor[1]+1] = "+"
		map[coor[0]-1][coor[1]-1] = "+"
		map[coor[0]+1][coor[1]+1] = "+"
		map[coor[0]+1][coor[1]-1] = "+"
	return C_e
			
def Create_Warrior(pick2, money):
	map[int(pick2[1])][int(pick2[0])] = "W"
	warrior.append([int(pick2[1]), int(pick2[0]), 100])
	return money

def Create_Worker(pick1, money):
	map[int(pick1[0])][int(pick1[1])] = "R"
	workers.append([int(pick1[0]), int(pick1[1]), 10])
	return money

def Set_Capital(pick):
	map[pick[0]][pick[1]] = "C"
	C_h = pick
	map[pick[0]-1][pick[1]] = "="
	map[pick[0]+1][pick[1]] = "="
	map[pick[0]][pick[1]+1] = "|"
	map[pick[0]][pick[1]-1] = "|"
	map[pick[0]-1][pick[1]+1] = "+"
	map[pick[0]-1][pick[1]-1] = "+"
	map[pick[0]+1][pick[1]+1] = "+"
	map[pick[0]+1][pick[1]-1] = "+"
	return C_h

def Print_Money(money, move):
	money = (money*len(workers)/2)*(move/2)
	print("			 Money - " + str(money) + "$")

def Print_Strength(warrior):
	strength = len(warrior) * 1.25
	print("			 Strength - " + str(strength))

def Print_Move(move):
	print("			 Move - " + str(move))

while True:

	move = move + 1
	# clear()
	print_field()
	print_commands()	
	print(C_e)
	command = input()
	if command == "C":
		C_h = Set_Capital([int(input()), int(input())])
	if command == "R" and money > -1:
		money = Create_Worker([input(), input()], money)
	if command == "W" and money > -1:
		money = Create_Warrior([input(), input()], money)
	
	C_e = (Enemy(move, workers, enemy, C_e)) #== 'EXIT':
	print(C_e)
	if map[C_e[0]][C_e[1]] == 'W':
		you_win =  [
		[" __   __           __        _____ _   _ _ "],
		[r" \ \ / /__  _   _ \ \      / /_ _| \ | | |"],
		[r"  \ V / _ \| | | | \ \ /\ / / | ||  \| | |"],
		[r"   | | (_) | |_| |  \ V  V /  | || |\  |_|"],
		[r"   |_|\___/ \__,_|   \_/\_/  |___|_| \_(_)"]]
                                       
		for i in range(len(you_win)):
			print(you_win[i][0])
		break
	if map[C_h[0]][C_h[1]] == 'W':
		you_lose =  [
		[r" __   __            _     ___  ____  _____ _ "],
		[r" \ \ / /__  _   _  | |   / _ \/ ___|| ____| |"],
		[r"  \ V / _ \| | | | | |  | | | \___ \|  _| | |"],
		[r"   | | (_) | |_| | | |__| |_| |___) | |___|_|"],
		[r"   |_|\___/ \__,_| |_____\___/|____/|_____(_)"]]
                                       
		for i in range(len(you_lose)):
			print(you_loseyou_lose[i][0])
		break

